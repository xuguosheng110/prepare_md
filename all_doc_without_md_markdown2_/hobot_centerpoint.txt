
激光雷达目标检测算法

功能介绍

激光雷达目标检测算法是使用地平线OpenExplorer在nuscenes数据集上训练出来的CenterPoint算法模型。

算法输入为32线激光雷达点云数据，输出信息包括目标的3D检测框、置信度、类别。支持的目标检测类型包括car、truck、bus、barrier、motorcycle、pedestrian共六大类别。

此示例使用本地激光雷达点云文件作为输入，利用BPU进行算法推理，发布包含点云数据、目标检测框和朝向的渲染图片消息，在PC端浏览器上渲染显示算法结果。

代码仓库：https://github.com/HorizonRDK/hobot_centerpoint

支持平台

| 平台      | 运行方式     | 示例功能                                |
| --------- | ------------ | --------------------------------------- |
| RDK Ultra | Ubuntu 20.04 | 使用本地回灌，并通过web展示推理渲染结果 |

准备工作

地平线RDK平台


地平线RDK已烧录好地平线提供的Ubuntu 20.04系统镜像。
地平线RDK已成功安装TogetheROS.Bot。
确认PC机能够通过网络访问地平线RDK。


使用介绍

地平线RDK平台

使用本地点云文件回灌

激光雷达物体检测算法示例使用激光雷达点云文件回灌，经过推理后将算法结果渲染后的图片msg，通过websocket package实现在PC端浏览器上渲染显示发布的图片和对应的算法结果。

准备激光雷达点云文件：

shell

板端下载回灌的点云文件

wget http://sunrise.horizon.cc/TogetheROS/data/hobotcenterpointdata.tar.gz

解压缩

mkdir config
tar -zxvf hobotcenterpointdata.tar.gz -C config

解压完成后数据在config/hobotcenterpointdata路径下



启动算法示例：

shell

配置tros.b环境

source /opt/tros/setup.bash

启动websocket服务

ros2 launch websocket websocket_service.launch.py

启动launch文件

ros2 launch hobotcenterpoint hobotcenterpointwebsocket.launch.py lidarprepath:=config/hobotcenterpoint_data


结果分析

启动算法示例后在运行终端输出如下信息：

text
[hobot_centerpoint-1]  model_file: config/model/model.hbm
[hobot_centerpoint-1]  lidar_list_file: ./config/nuscenes_lidar_val.lst
[hobot_centerpoint-1]  is_show: 1
[hobot_centerpoint-1]  is_loop: 1
[hobot_centerpoint-1]  pub_topic_name: /hobot_centerpoint
[hobot_centerpoint-1]  lidar_pre_path: ./config/hobot_centerpoint_data
[hobot_centerpoint-1] [BPU_PLAT]BPU Platform Version(1.3.3)!
[hobot_centerpoint-1] [HBRT] set log level as 0. version = 3.14.25.0
[hobot_centerpoint-1] [DNN] Runtime version = 1.12.3_(3.14.25 HBRT)


输出log显示，发布算法推理结果的topic为/hobot_centerpoint, 获取的回灌点云文件为81个。算法经过推理，后处理(包含推理结果的渲染和发布)，帧率约为2.4fps。

在PC端的浏览器输入http://IP:8000 即可查看图像和算法渲染效果（IP为RDK的IP地址）：